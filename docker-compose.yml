services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.pg
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ragdb}
      POSTGRES_USER: ${POSTGRES_USER:-raguser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ragpass}
    ports: ["15432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-raguser} -d ${POSTGRES_DB:-ragdb}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      DEBUGPY: "1"
      DATABASE_URL: postgresql+psycopg://raguser:ragpass@db:5432/ragdb
      EMBEDDING_PROVIDER_BASE_URL: ${EMBEDDING_PROVIDER_BASE_URL:-https://api.openai.com/v1}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL:-text-embedding-3-large}
      EMBEDDING_TARGET_DIM: ${EMBEDDING_TARGET_DIM:-3072}
      EMBEDDING_BATCH_SIZE: ${EMBEDDING_BATCH_SIZE:-64}
      EMBEDDING_MAX_RETRIES: ${EMBEDDING_MAX_RETRIES:-5}
      EMBEDDING_BACKOFF_BASE: ${EMBEDDING_BACKOFF_BASE:-0.6}
      CHAT_PROVIDER_BASE_URL: ${CHAT_PROVIDER_BASE_URL:-https://api.openai.com/v1}
      CHAT_MODEL: ${CHAT_MODEL:-gpt-4.1}
      CHAT_TEMPERATURE: ${CHAT_TEMPERATURE:-0.2}
      CHAT_TOP_P: ${CHAT_TOP_P:-1.0}
      CHAT_MAX_TOKENS: ${CHAT_MAX_TOKENS:-2048}
      CHAT_MAX_RETRIES: ${CHAT_MAX_RETRIES:-6}
      CHAT_BACKOFF_BASE: ${CHAT_BACKOFF_BASE:-0.6}
      API_KEY: ${API_KEY:-replace_me}
      AUTH_TOKEN_SECRET: ${AUTH_TOKEN_SECRET:-change-me}
      AUTH_TOKEN_TTL_SECONDS: ${AUTH_TOKEN_TTL_SECONDS:-86400}
      MAX_CANDIDATE_CHUNKS: ${MAX_CANDIDATE_CHUNKS:-96}
      CHUNK_OVERLAP: ${CHUNK_OVERLAP:-240}
      MAX_CHUNK_CHARS: ${MAX_CHUNK_CHARS:-1100}
      TOP_K: ${TOP_K:-16}
      RERANK: ${RERANK:-false}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-*}
      HTTP_TIMEOUT_SECONDS: ${HTTP_TIMEOUT_SECONDS:-60}
      TESS_LANGS: ${TESS_LANGS:-spa+eng}
      AUTH_USERS: ${AUTH_USERS:-username_changeme:password_changeme:role_changeme,username2_changeme:password2_changeme:role2_changeme}
    depends_on:
      db:
        condition: service_healthy
    ports: ["18000:8000", "15678:5678"]
    volumes:
      - ./backend/app:/app/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE:-http://localhost:18000}
    depends_on:
      - backend
    ports: ["13000:3000"]
    volumes:
      - ./frontend:/usr/src/app

volumes:
  dbdata:


